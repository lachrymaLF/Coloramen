let fs = require('fs');
let path = require('path');

const app_path = path.join(__dirname, '..', '..', '..');
const template_path = path.join(app_path, "template.ffx");
const out_path = path.join(app_path, "coloramen.ffx");

let try_readFileSync = (path) => {
    try {
        return fs.readFileSync(path);
    } catch (e) {
        alert(e);
        return null;
    }
}

const template = try_readFileSync(template_path).toString("hex");

const colors_offset = 0x0CD0;
const num_offset = 0x0ED3;

const pad_alpha = 'FF';
const key_width = 16; // number characters one definition of a key takes

exports.writeColors = function(colors, positions) {
    if (fs.existsSync(out_path))
        fs.unlinkSync(out_path);

    let output = Array.from(template);
    colors.forEach((e, i) => {
        let out_str = (positions[i] * 0xFFFF).toString(16).split('.')[0].padStart(8, '0') + pad_alpha + e;
        Array.from(out_str).forEach((f, j) => {
            output[colors_offset * 2 + j + i * key_width] = f;
        });
    });

    let num_str = colors.length.toString(16).padStart(2, '0');
    Array.from(num_str).forEach((e, i) => {
        output[num_offset * 2 + i] = e;
    });
    let buffer = Buffer.from(output.join(''), "hex");
    fs.appendFileSync(out_path, buffer);
}